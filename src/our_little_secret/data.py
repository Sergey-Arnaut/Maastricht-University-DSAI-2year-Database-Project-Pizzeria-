import mysql.connector
import os

# Settings needed for connection to db
db_config = {
    'host': 'mysql-bccc7a6-sergey-1c63.h.aivencloud.com',
    'user': 'lena',
    'password': 'Ols1-2025',
    'database': 'our_little_secret',
    'port': 28373,
    'ssl_ca': 'ca.pem',
    'ssl_verify_cert': True
}


def create_connection():
    """–°–æ–∑–¥–∞–µ—Ç —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ —Å –±–∞–∑–æ–π –¥–∞–Ω–Ω—ã—Ö"""
    try:
        conn = mysql.connector.connect(**db_config)
        print("‚úÖ Successful connection to database!")
        return conn
    except mysql.connector.Error as e:
        print(f"‚ùå Mistake with connection to MySQL: {e}")
        return None


def run_simple_select_query(conn):
    """–í—ã–ø–æ–ª–Ω—è–µ—Ç –ø—Ä–æ—Å—Ç–æ–π SELECT –∑–∞–ø—Ä–æ—Å –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è"""
    try:
        cursor = conn.cursor()

        # –ü—Ä–æ—Å—Ç–æ–π –∑–∞–ø—Ä–æ—Å –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è
        cursor.execute("SELECT 1")
        result = cursor.fetchone()

        print(f"‚úÖ Simple SELECT query executed successfully! Result: {result[0]}")
        return True

    except mysql.connector.Error as e:
        print(f"‚ùå Error executing SELECT query: {e}")
        return False


def check_database_tables(conn):
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ —Ç–∞–±–ª–∏—Ü –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö"""
    try:
        cursor = conn.cursor()

        # –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö —Ç–∞–±–ª–∏—Ü –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
        cursor.execute("SHOW TABLES")
        tables = cursor.fetchall()

        print("üìä Database tables:")
        if tables:
            for table in tables:
                print(f"   ‚úÖ {table[0]}")
            return True
        else:
            print("   ‚ùå No tables found in database")
            return False

    except mysql.connector.Error as e:
        print(f"‚ùå Error checking database tables: {e}")
        return False


def test_connection_and_queries():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ –∏ –≤—ã–ø–æ–ª–Ω—è–µ—Ç –ø—Ä–æ—Å—Ç—ã–µ –∑–∞–ø—Ä–æ—Å—ã"""
    print("üöÄ Testing database connection and queries...")
    print("=" * 50)

    # –°–æ–∑–¥–∞–µ–º —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ
    conn = create_connection()
    if not conn:
        return False

    try:
        # –¢–µ—Å—Ç 1: –ü—Ä–æ—Å—Ç–æ–π SELECT –∑–∞–ø—Ä–æ—Å
        print("\n1. üîç Running simple SELECT query...")
        if not run_simple_select_query(conn):
            return False

        # –¢–µ—Å—Ç 2: –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç–∞–±–ª–∏—Ü
        print("\n2. üìã Checking database tables...")
        if not check_database_tables(conn):
            return False

        # –¢–µ—Å—Ç 3: –ü—Ä–∏–º–µ—Ä –∑–∞–ø—Ä–æ—Å–∞ –∫ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–π —Ç–∞–±–ª–∏—Ü–µ (–µ—Å–ª–∏ —Ç–∞–±–ª–∏—Ü—ã —Å—É—â–µ—Å—Ç–≤—É—é—Ç)
        print("\n3. üçï Sample data query (if tables exist)...")
        try:
            cursor = conn.cursor()
            # –ü—Ä–æ–±—É–µ–º –ø–æ–ª—É—á–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –∏–∑ —Ç–∞–±–ª–∏—Ü—ã Pizza, –µ—Å–ª–∏ –æ–Ω–∞ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
            cursor.execute("""
                SELECT COUNT(*) as table_exists 
                FROM information_schema.tables 
                WHERE table_schema = 'our_little_secret' 
                AND table_name = 'Pizza'
            """)
            pizza_table_exists = cursor.fetchone()[0] > 0

            if pizza_table_exists:
                cursor.execute("SELECT pizza_id, name, size FROM Pizza LIMIT 3")
                pizzas = cursor.fetchall()
                if pizzas:
                    print("   Sample pizzas:")
                    for pizza in pizzas:
                        print(f"     {pizza[0]}. {pizza[1]} ({pizza[2]})")
                else:
                    print("   No pizzas found in table")
            else:
                print("   Pizza table doesn't exist yet")

        except mysql.connector.Error as e:
            print(f"   ‚ÑπÔ∏è  Info: {e}")

        print("\n" + "=" * 50)
        print("üéâ All connection tests passed successfully!")
        print("‚úÖ Database connection is working properly")
        print("‚úÖ Simple SELECT queries can be executed")
        print("‚úÖ Ready for application development")

        return True

    except Exception as e:
        print(f"‚ùå Error during testing: {e}")
        return False
    finally:
        if conn:
            conn.close()
            print("\nüîå Database connection closed.")


def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    print("üîå DATABASE CONNECTION TEST")
    print("=" * 50)

    # –ó–∞–ø—É—Å–∫–∞–µ–º —Ç–µ—Å—Ç—ã
    success = test_connection_and_queries()

    if success:
        print("\n Week 2 criteria completed!")
        print("   - Database connection established")
        print("   - Simple SELECT queries executed")
        print("   - Ready for application development")
    else:
        print("\n‚ùå Connection test failed")


if __name__ == "__main__":
    main()
